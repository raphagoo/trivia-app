name: Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
        mongodb:
          image: mongo:latest
          ports:
            - 27017:27017

    strategy:
      matrix:
        node-version: [20.x]

    steps:

    - name: Checkout another repository
      uses: actions/checkout@v4
      with:
        repository: raphagoo/trivia-app-server
        ref: launch_api_from_front

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Set up test database
      run: |
        echo "MONGO_TEST_URL=mongodb://localhost:27017/trivia-app-test" >> .env
        echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
        echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
        echo "NODE_ENV=test" >> .env
        npm run fixtures

    - name: Start Api
      run: |
        nohup npm start &

    - name: Wait for API to start
      run: sleep 60  # wait for 60 seconds

    - name: Checkout
      uses: actions/checkout@v4


    - name: Build
      run: |
        npm install --force
    - name: Prettier
      run: |
        npm run prettier-check
    - name: Lint
      run: |
        npm run lint

    - name: Check API
      run: |
        curl --fail --silent --head http://localhost:3000 || exit 1

    - name: Cypress run
      # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
      uses: cypress-io/github-action@v6
      with:
        # Starts web server for E2E tests - replace with your own server invocation
        # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
        start: npm start
        wait-on: 'http://localhost:8080' # Waits for above
        # Records to Cypress Cloud
        # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
        record: true
        parallel: true # Runs test in parallel using settings above
      env:
        # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
        # in GitHub repo → Settings → Secrets → Actions
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

    - name: Upload screenshots
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: cypress-screenshots
        path: cypress/screenshots/

    - name: Run
      run: |
        npm run build

