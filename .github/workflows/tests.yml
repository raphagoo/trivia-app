name: Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
        mongodb:
          image: mongo:latest
          ports:
            - 27017:27017

    strategy:
      matrix:
        node-version: [20.x]

    steps:

    - name: Checkout another repository
      uses: actions/checkout@v4
      with:
        repository: raphagoo/trivia-app-server
        ref: launch_api_from_front
        path: api

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        cd api
        npm install --force

    - name: Set up test database
      run: |
        cd api
        echo "MONGO_TEST_URL=mongodb://localhost:27017/trivia-app-test" >> .env
        echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
        echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
        echo "NODE_ENV=test" >> .env
        npm run fixtures

    - name: Start Api
      run: |
        cd api
        nohup npm start &

    - name: Test axios API side
      run: |
        cd api
        npm run test-axios

    - name: Checkout
      uses: actions/checkout@v4

    - name: Build
      run: |
        npm install --force
    - name: Prettier
      run: |
        npm run prettier-check
    - name: Lint
      run: |
        npm run lint

    - name: Wait for server to start
      run: |
        for i in {1..60}; do
          if curl --fail --silent --head http://localhost:3000/health; then
            echo 'Server is ready'
            break
          fi
          echo 'Waiting for server...'
          sleep 1
        done

    - name: Test axios front side
      run: |
        node ./testAxios.js

    - name: Cypress run
      uses: cypress-io/github-action@v6
      with:
        start: npm start
        wait-on: 'http://localhost:8080' # Waits for above
        record: true
        parallel: false # Runs test in parallel using settings above
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

    - name: Print server logs
      run: cat server.log

    - name: Upload screenshots
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: cypress-screenshots
        path: cypress/screenshots/

    - name: Run
      run: |
        npm run build

